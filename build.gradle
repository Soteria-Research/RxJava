buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        // classpath 'com.netflix.nebula:gradle-rxjava-project-plugin:4.0.0'
        classpath 'ru.vyarus:gradle-animalsniffer-plugin:1.1.0'
    }
}

description = 'RxJava: Reactive Extensions for the JVM â€“ a library for composing asynchronous and event-based programs using observable sequences for the Java VM.'

// MOJO - removing plugins that caused the build to fail on FreeBSD-aarch64.
//        Note - this is not a full port of RxJava to run with Morello-JDK17u.
//        Instead we have simply ported RxJava to the point that the renaissance
//        benchmark `rx-scrabble` succesfully runs
apply plugin: 'java'
//apply plugin: 'pmd'
apply plugin: 'findbugs'
apply plugin: 'jacoco'
apply plugin: 'ru.vyarus.animalsniffer'
apply plugin: 'maven-publish'
// apply plugin: 'nebula.rxjava-project'

repositories {
    mavenCentral()
}

dependencies {
    signature 'org.codehaus.mojo.signature:java16:1.1@signature'

    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile 'com.google.guava:guava:24.0-jre'
    testCompile 'com.pushtorefresh.java-private-constructor-checker:checker:1.2.0'

    compile 'org.openjdk.jmh:jmh-core:1.11.3'
    compile 'org.openjdk.jmh:jmh-generator-annprocess:1.11.3'
}

javadoc {
    exclude "**/rx/internal/**"
    exclude "**/test/**"
    exclude "**/perf/**"
    options {
        windowTitle = "RxJava Javadoc ${project.version}"
    }
    // Clear the following options to make the docs consistent with the old format
    options.addStringOption('top').value = ''
    options.addStringOption('doctitle').value = ''
    options.addStringOption('header').value = ''
    if (JavaVersion.current().isJava7()) {
        // "./gradle/stylesheet.css" only supports Java 7
        options.addStringOption('stylesheetfile', rootProject.file('./gradle/stylesheet.css').toString())
    }
}

// support for snapshot/final releases with the various branches RxJava uses
// nebulaRelease {
//     addReleaseBranchPattern(/\d+\.\d+\.\d+/)
//     addReleaseBranchPattern('HEAD')
// }

if (project.hasProperty('release.useLastTag')) {
    tasks.prepare.enabled = false
}

test{
     maxHeapSize = "1200m"
}

// license {
//     excludes(["**/*.md", "**/*.txt", "**/unsafe/*.java", "**/atomic/*.java", "**/Beta.java", "**/Experimental.java"])
// }

jacoco {
    toolVersion = '0.7.7.201606060606' // See http://www.eclemma.org/jacoco/.
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

build.dependsOn jacocoTestReport

publishing {
    publications {
        myLibrary(MavenPublication) {
            groupId = 'io.reactivex.rxjava3'
            artifactId = 'rxjava'
            version = '1.3.8-CHERI-SNAPSHOT'

            from components.java
        }
    }
    repositories {
        maven {
            name = "Github Packages"
            url = "https://maven.pkg.github.com/Soteria-Research/RxJava"
            credentials {
                username = System.getenv("GITHUB_USERNAME")
                password = System.getenv("GITHUB_PAT")
            }
        }
    }
}

//pmd {
//    toolVersion = '5.4.2'
//    ignoreFailures = true
//    sourceSets = [sourceSets.main]
//    ruleSets = []
//    ruleSetFiles = files('pmd.xml')
//}

//pmdMain {
//    reports {
//        html.enabled = true
//        xml.enabled = true
//    }
//}

//task pmdPrint(dependsOn: 'pmdMain') << {
//    File file = new File('build/reports/pmd/main.xml')
//    if (file.exists()) {
//
//        println("Listing first 100 PMD violations")
//
//        file.eachLine { line, count ->
//            if (count <= 100) {
//               println(line)
//            }
//        }
//
//    } else {
//        println("PMD file not found.")
//    }
//}

//build.dependsOn pmdPrint

animalsniffer {
    annotation = 'rx.internal.util.SuppressAnimalSniffer'
}

findbugs {
    ignoreFailures true
    toolVersion = '3.0.1'
    effort = 'max'
    reportLevel = 'low'
    sourceSets = [sourceSets.main]
}

findbugsMain {
    reports {
        html.enabled = false // Findbugs can only have on report enabled
        xml.enabled = true
    }
}
